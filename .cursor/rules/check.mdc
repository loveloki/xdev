---
description: 
globs: 
alwaysApply: true
---
# 检查

执行全面的代码质量和安全检查。

## 主要任务
运行 `cargo check`, `cargo clippy` 并解决所有由此产生的错误。

## 重要事项
- 在此过程中 **不要** 提交任何代码
- **不要** 更改版本号
- **只专注于** 修复检查发现的问题

## 常见的检查包括
1.  **代码规范 (Linting)**：代码风格和语法错误
3.  **单元测试 (Unit Tests)**：失败的测试用例
4.  **安全扫描 (Security Scan)**：漏洞检测
5.  **代码格式化 (Code Formatting)**：风格一致性
6.  **构建验证 (Build Verification)**：编译错误

## 流程
1.  运行检查命令
2.  分析输出的错误和警告
3.  按以下优先顺序修复问题：
    -   首先是破坏性构建错误
    -   测试失败
    -   代码规范错误
    -   警告
4.  每次修复后重新运行检查
5.  持续进行直到所有检查都通过
