stages:
  - build
  - release

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo
  CARGO_TARGET_DIR: $CI_PROJECT_DIR/target

# ÁºìÂ≠òÈÖçÁΩÆ
cache:
  key: "$CI_JOB_NAME"
  paths:
    - cargo/
    - target/

# ÊûÑÂª∫Èò∂ÊÆµ
.build_template: &build_template
  stage: build
  image: rust:latest
  before_script:
    - apt-get update && apt-get install -y upx-ucl
    - cargo install cross --git https://github.com/cross-rs/cross
  script:
    - cross build --target $TARGET --release
    - mkdir -p dist
    - cp target/$TARGET/release/xdev dist/xdev-$TARGET
    - upx --best dist/xdev-$TARGET
  artifacts:
    paths:
      - dist/xdev-$TARGET
    expire_in: 1 hour
  only:
    - tags

build:linux-x86_64:
  <<: *build_template
  variables:
    TARGET: x86_64-unknown-linux-gnu

build:linux-aarch64:
  <<: *build_template
  variables:
    TARGET: aarch64-unknown-linux-gnu

# ÂèëÂ∏ÉÈò∂ÊÆµ
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build:linux-x86_64
    - build:linux-aarch64
  before_script:
    - apk add --no-cache curl jq
  script:
    - echo "ÂáÜÂ§áÂèëÂ∏É $CI_COMMIT_TAG"
    - ls -la dist/
    
    # ÁîüÊàêÂèëÂ∏ÉÊèèËø∞
    - |
      cat > release_description.md << EOF
      ## üöÄ xdev $CI_COMMIT_TAG
      
      ÈÄöËøá GitLab CI/CD Ëá™Âä®ÊûÑÂª∫ÁöÑÂèëÂ∏ÉÁâàÊú¨„ÄÇ
      
      ### üì¶ ÊîØÊåÅÁöÑÊû∂ÊûÑ
      - \`xdev-x86_64-unknown-linux-gnu\`: Linux x86_64
      - \`xdev-aarch64-unknown-linux-gnu\`: Linux ARM64
      
      ### üì• ÂÆâË£ÖÊñπÊ≥ï
      \`\`\`bash
      # ‰∏ãËΩΩÂØπÂ∫îÊû∂ÊûÑÁöÑ‰∫åËøõÂà∂Êñá‰ª∂
      # ‰∏∫Êñá‰ª∂Ê∑ªÂä†ÊâßË°åÊùÉÈôê
      chmod +x xdev-*
      # ÁßªÂä®Âà∞ PATH ÁõÆÂΩï
      sudo mv xdev-* /usr/local/bin/xdev
      \`\`\`
      
      ### üîó ‰∏ãËΩΩÈìæÊé•
      
      EOF
    
    # ‰∏ä‰º†Êñá‰ª∂Âà∞ GitLab Generic Package Registry
    - |
      for file in dist/xdev-*; do
        filename=$(basename $file)
        echo "‰∏ä‰º† $filename..."
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
             --upload-file $file \
             "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/xdev/${CI_COMMIT_TAG}/$filename"
        
        # Ê∑ªÂä†‰∏ãËΩΩÈìæÊé•Âà∞ÂèëÂ∏ÉÊèèËø∞
        echo "- [$filename](${CI_PROJECT_URL}/-/packages/generic/xdev/${CI_COMMIT_TAG}/$filename)" >> release_description.md
      done
    
    # ÂàõÂª∫ GitLab Release
    - |
      release-cli create \
        --name "xdev $CI_COMMIT_TAG" \
        --description "$(cat release_description.md)" \
        --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"xdev-x86_64-unknown-linux-gnu\",\"url\":\"${CI_PROJECT_URL}/-/packages/generic/xdev/${CI_COMMIT_TAG}/xdev-x86_64-unknown-linux-gnu\"}" \
        --assets-link "{\"name\":\"xdev-aarch64-unknown-linux-gnu\",\"url\":\"${CI_PROJECT_URL}/-/packages/generic/xdev/${CI_COMMIT_TAG}/xdev-aarch64-unknown-linux-gnu\"}"

  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - tags 
